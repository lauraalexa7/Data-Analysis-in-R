
Jupyter Notebook
L02-Assignment Last Checkpoint: 11/13/2019 (autosaved) [R 3.5.1]

# R features : 

geom_jitter()
geom_smooth()
facet_wrap() or facet_grid()
select()
rename()
labs()
# alpha blending
# %>% pipe
# Map data to color
$ A chart includes a categorical variable

# Dataset: diamonds
# Load libraries

library(tidyverse)

# Explore data structure

# Data: diamonds

diamonds %>% glimpse()

# Display help on data

? diamonds

Observations: 53,940
Variables: 10
$ carat   <dbl> 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.
$ cut     <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ve.
$ color   <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I.
$ clarity <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1,.
$ depth   <dbl> 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 6.
$ table   <dbl> 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 5.
$ price   <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 3.
$ x       <dbl> 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.
$ y       <dbl> 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.
$ z       <dbl> 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.

Data processing

# Price vs. Carat by Color and Cut: Facet Grid Data Frames

# Data frames from the sourcemapping data

# Price vs Carat by Color and Cut

diamonds %>% rename(CaratWeight = carat) %>%
  
  names()


diamonds %>% select(price, cut, color, carat) 

df <- diamonds %>% select(price, cut, color, carat) 

df %>% ggplot(mapping = aes(x = carat, y = price, color = color)) +
  
  geom_jitter(alpha = 0.5) +
  
  geom_smooth(method = "lm", se = FALSE) +
  
  facet_grid(color ~cut)

labs(title = "Diamonds Price: price vs carat by cut and color", subtitle = "custom geom jitter and alpha with color mapped to color")


'CaratWeight' 'cut' 'color' 'clarity' 'depth' 'table' 'price' 'x' 'y' 'z' 

A tibble: 53940 × 4 price	cut	color	carat
<int>	<ord>	<ord>	<dbl>
  326	Ideal 	E	0.23
326	Premium 	E	0.21
327	Good 	E	0.23
334	Premium 	I	0.29
335	Good 	J	0.31
336	Very Good	J	0.24
336	Very Good	I	0.24
337	Very Good	H	0.26
337	Fair 	E	0.22
338	Very Good	H	0.23
339	Good 	J	0.30
340	Ideal 	J	0.23
342	Premium 	F	0.22
344	Ideal 	J	0.31
345	Premium 	E	0.20
345	Premium 	E	0.32
348	Ideal 	I	0.30
351	Good 	J	0.30
351	Good 	J	0.30
351	Very Good	J	0.30
351	Good 	I	0.30
352	Very Good	E	0.23
353	Very Good	H	0.23
353	Very Good	J	0.31
353	Very Good	J	0.31
354	Very Good	G	0.23
355	Premium 	I	0.24
357	Very Good	J	0.30
357	Very Good	D	0.23
357	Very Good	F	0.23
???	???	???	???
2753	Premium 	E	0.70
2753	Premium 	E	0.57
2753	Premium 	F	0.61
2753	Good 	G	0.80
2753	Good 	I	0.84
2753	Ideal 	E	0.77
2753	Good 	D	0.74
2753	Very Good	J	0.90
2753	Premium 	I	0.76
2753	Ideal 	I	0.76
2755	Very Good	E	0.70
2755	Very Good	E	0.70
2755	Very Good	D	0.70
2756	Ideal 	I	0.73
2756	Ideal 	I	0.73
2756	Ideal 	I	0.79
2756	Ideal 	E	0.71
2756	Good 	F	0.79
2756	Premium 	E	0.79
2756	Ideal 	G	0.71
2756	Premium 	E	0.71
2756	Premium 	F	0.71
2757	Very Good	E	0.70
2757	Very Good	E	0.70
2757	Premium 	D	0.72
2757	Ideal 	D	0.72
2757	Good 	D	0.72
2757	Very Good	D	0.70
2757	Premium 	H	0.86
2757	Ideal 	D	0.75

$title
[1] "Diamonds Price: price vs carat by cut and color"

$subtitle
[1] "custom geom jitter and alpha with color mapped to color"

attr(,"class")
[1] "labels"

# Price vs Cut

# Price vs Cut by Color and Carat

# Price vs Cut by Color and Carat

diamonds %>% select(price, cut, color, carat) 

df <- diamonds %>% select(price, cut, color, carat) 

df %>% ggplot(mapping = aes(x = cut, y = price)) +
  
  geom_jitter(alpha = 0.2) +
  
  labs(title = "Diamonds Price: price vs cut")


A tibble: 53940 × 4 price	cut	color	carat
<int>	<ord>	<ord>	<dbl>
  326	Ideal 	E	0.23
326	Premium 	E	0.21
327	Good 	E	0.23
334	Premium 	I	0.29
335	Good 	J	0.31
336	Very Good	J	0.24
336	Very Good	I	0.24
337	Very Good	H	0.26
337	Fair 	E	0.22
338	Very Good	H	0.23
339	Good 	J	0.30
340	Ideal 	J	0.23
342	Premium 	F	0.22
344	Ideal 	J	0.31
345	Premium 	E	0.20
345	Premium 	E	0.32
348	Ideal 	I	0.30
351	Good 	J	0.30
351	Good 	J	0.30
351	Very Good	J	0.30
351	Good 	I	0.30
352	Very Good	E	0.23
353	Very Good	H	0.23
353	Very Good	J	0.31
353	Very Good	J	0.31
354	Very Good	G	0.23
355	Premium 	I	0.24
357	Very Good	J	0.30
357	Very Good	D	0.23
357	Very Good	F	0.23
???	???	???	???
2753	Premium 	E	0.70
2753	Premium 	E	0.57
2753	Premium 	F	0.61
2753	Good 	G	0.80
2753	Good 	I	0.84
2753	Ideal 	E	0.77
2753	Good 	D	0.74
2753	Very Good	J	0.90
2753	Premium 	I	0.76
2753	Ideal 	I	0.76
2755	Very Good	E	0.70
2755	Very Good	E	0.70
2755	Very Good	D	0.70
2756	Ideal 	I	0.73
2756	Ideal 	I	0.73
2756	Ideal 	I	0.79
2756	Ideal 	E	0.71
2756	Good 	F	0.79
2756	Premium 	E	0.79
2756	Ideal 	G	0.71
2756	Premium 	E	0.71
2756	Premium 	F	0.71
2757	Very Good	E	0.70
2757	Very Good	E	0.70
2757	Premium 	D	0.72
2757	Ideal 	D	0.72
2757	Good 	D	0.72
2757	Very Good	D	0.70
2757	Premium 	H	0.86
2757	Ideal 	D	0.75
Price vs Carat


# Price vs Carat - Carat mapped to Color

diamonds %>% select(price, cut, color, carat) 

df <- diamonds %>% select(price, cut, color, carat) 

df %>%
  
  ggplot(mapping = aes(x = carat, y = price, color = carat)) +
  
  geom_jitter(alpha = 0.1) +
  
  geom_smooth(method = "lm", se = FALSE) +
  
  labs(title = "Diamonds Price: carat vs price", subtitle = "custom geom jitter and alpha with color mapped to carat")


A tibble: 53940 × 4 price	cut	color	carat
<int>	<ord>	<ord>	<dbl>
  326	Ideal 	E	0.23
326	Premium 	E	0.21
327	Good 	E	0.23
334	Premium 	I	0.29
335	Good 	J	0.31
336	Very Good	J	0.24
336	Very Good	I	0.24
337	Very Good	H	0.26
337	Fair 	E	0.22
338	Very Good	H	0.23
339	Good 	J	0.30
340	Ideal 	J	0.23
342	Premium 	F	0.22
344	Ideal 	J	0.31
345	Premium 	E	0.20
345	Premium 	E	0.32
348	Ideal 	I	0.30
351	Good 	J	0.30
351	Good 	J	0.30
351	Very Good	J	0.30
351	Good 	I	0.30
352	Very Good	E	0.23
353	Very Good	H	0.23
353	Very Good	J	0.31
353	Very Good	J	0.31
354	Very Good	G	0.23
355	Premium 	I	0.24
357	Very Good	J	0.30
357	Very Good	D	0.23
357	Very Good	F	0.23
???	???	???	???
2753	Premium 	E	0.70
2753	Premium 	E	0.57
2753	Premium 	F	0.61
2753	Good 	G	0.80
2753	Good 	I	0.84
2753	Ideal 	E	0.77
2753	Good 	D	0.74
2753	Very Good	J	0.90
2753	Premium 	I	0.76
2753	Ideal 	I	0.76
2755	Very Good	E	0.70
2755	Very Good	E	0.70
2755	Very Good	D	0.70
2756	Ideal 	I	0.73
2756	Ideal 	I	0.73
2756	Ideal 	I	0.79
2756	Ideal 	E	0.71
2756	Good 	F	0.79
2756	Premium 	E	0.79
2756	Ideal 	G	0.71
2756	Premium 	E	0.71
2756	Premium 	F	0.71
2757	Very Good	E	0.70
2757	Very Good	E	0.70
2757	Premium 	D	0.72
2757	Ideal 	D	0.72
2757	Good 	D	0.72
2757	Very Good	D	0.70
2757	Premium 	H	0.86
2757	Ideal 	D	0.75


# Analysis and Conclusions

# To gain a better understanding of the factors contributing to higher prices of
# diamonds, the price variable
# was mapped to the y axis, with cut, color, 
# and carat mapped to the x axis.
# A scatterplot with a linear trendline
# was used with continuous variables to highlight 
# trends and patterns within the data.

# In chart 1, Price vs. Carat by Color and Cut were mapped using a 
# Facet Grid. This was used to gain a visual representation of 
# how each variable correlates with price. This graph shows 
# there is a positive correlation between price and increasing carat weight,
# as well as quality of cut and color. 
# The density of data points based on various 
# variables is difficult to discern, so separate 
# charts were created below to drill down.

# In chart 2, Price vs Cut by Color and Carat were mapped. 
# This graph shows the density of data points begins to
# decrease beyond the price of $5000.

# In chart 3, Price vs Carat were mapped with 
# Carat mapped to Color. This graph shows the density 
# of data points decreases sharply beyond 2 carats.

# The price continues to rise in relation to the
# increase in carat weight. It is determined there is a positive
# correlation between price and increasing carat weight, 
# as well as quality of cut and color. As the price of
# the diamonds increases beyond a certain price point, 
# however, the demand decreases.
